
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isSuperuser() {
      return get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role == 'Superuser';
    }
    
    function isManagement() {
      return get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'Management', 'B1 Supervisor', 'B2 Supervisor', 'Quality Manager'];
    }

    function canViewAnalytics() {
       return get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'Management', 'B1 Supervisor', 'B2 Supervisor', 'Quality Manager'];
    }

    function canViewStatus() {
        return request.auth != null; // Any authenticated user can view status
    }

    // Rules for the roles_admin collection
    match /roles_admin/{userId} {
      allow read: if request.auth != null;
      // Only Superusers can create, update, or delete roles.
      allow write: if isSuperuser();
    }

    // Rules for jobs collection
    match /jobs/{jobId} {
      allow read: if request.auth != null;
      // Allow Superusers or users with file-processing permissions to create/update jobs
      allow write: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser'];
    }

    // Rules for Tapeheads Submissions
    match /tapeheads-submissions/{reportId} {
        allow read: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B2 Supervisor', 'Tapehead Lead', 'Management', 'Quality Manager'];
        allow write: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B2 Supervisor', 'Tapehead Operator', 'Tapehead Lead'];
    }
    
    // Rules for Gantry Reports
    match /gantry-reports/{reportId} {
        allow read: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B1 Supervisor', 'Gantry Lead', 'Management', 'Quality Manager'];
        allow write: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B1 Supervisor', 'Gantry Lead'];
    }

    // Rules for Films Reports
    match /films/{reportId} {
        allow read: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B1 Supervisor', 'Films Lead', 'Management', 'Quality Manager'];
        allow write: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B1 Supervisor', 'Films Lead'];
    }

    // Rules for Graphics Tasks
    match /graphics-tasks/{taskId} {
        allow read: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B1 Supervisor', 'Graphics Lead', 'Management', 'Quality Manager'];
        allow write: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B1 Supervisor', 'Graphics Lead'];
    }

    // Rules for Pregger Reports
    match /pregger-reports/{reportId} {
         allow read: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B2 Supervisor', 'Pregger Lead', 'Management', 'Quality Manager'];
         allow write: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'B2 Supervisor', 'Pregger Lead'];
    }
    
    // Rules for QC Inspections
    match /inspections/{inspectionId} {
         allow read, write: if get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role in ['Superuser', 'Quality Manager'];
    }

    // Fallback rule for any other collection
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
