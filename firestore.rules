
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isAuthed() {
      return request.auth != null;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/roles_admin/$(request.auth.uid)).data.role;
    }

    function isNSRole(allowedRoles) {
      return isAuthed() && getUserRole() in allowedRoles;
    }
    
    // Rules for Collections

    match /users/{userId} {
      allow read: if isAuthed();
      allow write: if isAuthed() && request.auth.uid == userId; // Users can update their own profile
    }

    match /roles_admin/{userId} {
      allow read: if isAuthed() && request.auth.uid == userId; // Users can read their own role
      allow write: if isNSRole(['Superuser']); // Only Superusers can change roles
    }

    match /jobs/{jobId} {
        allow read: if isNSRole(['Superuser', 'B2 Supervisor', 'B1 Supervisor', 'Quality Manager', 'Management', 'Pregger Lead', 'Tapehead Operator', 'Tapehead Lead', 'Gantry Lead', 'Films Lead', 'Graphics Lead']);
        allow write: if isNSRole(['Superuser', 'Tapehead Lead']);
    }

    match /tapeheads-submissions/{reportId} {
      allow read: if isNSRole(['Superuser', 'B2 Supervisor', 'Tapehead Lead', 'Tapehead Operator', 'Quality Manager', 'Management']);
      allow create: if isAuthed();
      allow update, delete: if isAuthed() && (request.auth.uid == resource.data.userId || isNSRole(['Superuser', 'B2 Supervisor', 'Tapehead Lead']));
    }

    match /films/{reportId} {
        allow read: if isNSRole(['Superuser', 'B1 Supervisor', 'Films Lead', 'Quality Manager', 'Management']);
        allow write: if isNSRole(['Superuser', 'Films Lead']);
    }
    
    match /gantry-reports/{reportId} {
        allow read: if isNSRole(['Superuser', 'B1 Supervisor', 'Gantry Lead', 'Quality Manager', 'Management']);
        allow write: if isNSRole(['Superuser', 'Gantry Lead']);
    }

    match /pregger-reports/{reportId} {
        allow read: if isNSRole(['Superuser', 'B2 Supervisor', 'Pregger Lead', 'Quality Manager', 'Management']);
        allow write: if isNSRole(['Superuser', 'Pregger Lead']);
    }

    match /graphics-tasks/{taskId} {
        allow read: if isNSRole(['Superuser', 'B1 Supervisor', 'Graphics Lead', 'Quality Manager', 'Management']);
        allow write: if isNSRole(['Superuser', 'Graphics Lead']);
    }

    match /inspections/{inspectionId} {
        allow read: if isNSRole(['Superuser', 'Quality Manager', 'Management']);
        allow write: if isNSRole(['Superuser', 'Quality Manager']);
    }
    
    // Default deny all other paths
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
